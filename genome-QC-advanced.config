manifest {
    /* nextflow.config for genome-QC */

    /* Homepage of project */
    homePage = ''
    
    /* Author of COMETG pipeline */
    author = 'Reed Woyda'

    /* Description of project */
    description = 'The purpose of genome-QC.nf is to use NGS data QC and trimming as an example for a simple Nextflow pipeline.'

    /* Main pipeline script */
    mainScript = 'genom-QC.nf'
    
    /* Version */
    // v0.0.1
}

params {

    /* Input Reads Directory */
        reads = "./raw_reads/*_R{1,2}*.f*.gz"
        reads_fmt = "*_R{1,2}*.f*.gz"
        input_reads = ""
        
    /* Alternative input via CSV */
        input_csv = ""
        
    /* Default output directory */
        outdir = './genome-QC-output'

    /* Help menu and version */
        help = 0
        h = 0
        v = 0
        version = 0

    /* Number of threads */
        threads = 5

    /* FastP trimming parameters */
        trim_quality = "20"

    /* Containers and Conda Environments */
        /* Singularity Container Location */
        genome_qc_container = "./containers/singularity/genome-qc.sif"

        /* Conda Environment recipe files */
        genome_qc_env = "./containers/conda/genome-qc-env.yml"

        /* Conda Pre-built Environment Locations */
        genome_qc_prebuilt_env = "./containers/conda/genome-qc-env"

        /* Environment Configuration files */
        conda_slurm_config = "./containers/conda/conda_slurm.config"
        conda_config = "./containers/conda/conda.config"
        singularity_slurm_config = "./containers/singularity/singularity_slurm.config"
        singularity_config = "./containers/singularity/singularity.config"

    /* Queue Size */
        queue_size = "5"

    /* SLURM Parameters */
        slurm_time = "24h"
        slurm_partition = ""
        slurm_queue = ""
        slurm_memory = "200MB"

}

profiles {
    conda_slurm {
        includeConfig "${params.conda_slurm_config}"
        conda.enabled = true
        process.conda = "${params.genome_qc_prebuilt_env}"

        executor {
            queueSize = "${params.queue_size}"
        }
    }
    singularity_slurm {
        includeConfig "${params.singularity_slurm_config}"
        process.container = "${params.genome_qc_container}"
        singularity {
            enabled = true
            autoMounts = true
        }

        executor {
            queueSize = "${params.queue_size}"
        }
    }
    conda {
        includeConfig "${params.conda_config}"
        conda.enabled = true
        process.conda = "${params.genome_qc_prebuilt_env}"

        executor {
            queueSize = "${params.queue_size}"
        }
    }
    singularity {
        includeConfig "${params.singularity_config}"
        process.container = "${params.genome_qc_container}"
        singularity {
            enabled = true
            autoMounts = true
        }

        executor {
            queueSize = "${params.queue_size}"
        }
    }
}